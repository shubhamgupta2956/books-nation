{"version":3,"sources":["components/header.js","components/filter.js","components/searchbar.js","api/axiosInstance.js","api/booksApi.js","components/bookCard.js","components/pagination.js","components/booksList.js","components/loadingSpinner.js","components/chip.js","pages/landing.js","components/suggestionBookCard.js","pages/bookInfo.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Filter","props","value","filter","onChange","handleFilter","languageRestriction","handleLanguageRes","Searchbar","defaultProps","sort","onSubmit","handleSort","action","type","placeholder","handleSearch","handleBookTitle","handleAuthorName","handlePublisherName","onClick","axiosInstance","require","create","headers","baseURL","getBooks","name","orderValue","startIndex","get","params","q","orderBy","langRestrict","then","response","JSON","parse","request","catch","error","Promise","reject","BookCard","publishedYear","book","volumeInfo","hasOwnProperty","publishedDate","substring","averageRating","thumbnail","imageLinks","to","id","src","alt","title","authors","publisher","language","toUpperCase","Pagination","state","pageNumbers","booksPerPage","totalPages","Math","ceil","totalBooks","currentPage","splice","i","handlePaginationNext","bind","handlePaginationPrev","handlePageChange","this","onPageChange","Number","setState","map","key","BooksList","books","length","LoadingSpinner","Chip","handleRemove","LandingPage","e","searchField","target","bookTitle","authorName","publisherName","preventDefault","undefined","handleRequest","handlePage","isLoading","data","items","totalItems","err","alert","searchBook","SuggestedBookCard","BookInfo","handleGetData","bookId","match","Book","description","pagecount","pageCount","saleInfo","saleability","category","categories","link","accessInfo","webReaderLink","ebook","isEbook","query","suggestions","BookId","prevProps","prevState","href","bookID","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b1cb7c2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return(\n            <div className=\"header\">\n                Book<span className=\"nation\">Nation</span>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Filter = (props) => {\n    return(\n        <div className=\"filter\">\n            <span className=\"label\">Filter By:</span>\n            <select className=\"filterBy categoryDropdown\" value={props.filter} onChange={props.handleFilter} >\n                <option value={null}>None</option>\n                <option value=\"full\">Full</option>\n                <option value=\"partial\">Partial</option>\n                <option value=\"ebooks\">eBooks</option>\n                <option value=\"free-ebooks\">Free eBooks</option>\n                <option value=\"paid-ebooks\">Paid eBooks</option>\n            </select>\n            <select\n                className=\"filterBy LanguageDropdown\"\n                value={props.languageRestriction}\n                onChange={props.handleLanguageRes}\n            >\n                <option value={null}>All</option>\n                <option value=\"en\">English</option>\n                <option value=\"fr\">French</option>\n                <option value=\"de\">German</option>\n                <option value=\"hi\">Hindi</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"ru\">Russian</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\nimport Filter from './filter';\n\nconst Searchbar = (props) => {\n    Searchbar.defaultProps = {\n        sort: \"relevance\"\n    };\n\n    return(\n        <div className=\"searchbar\">\n            <form onSubmit={props.handleSort} action=\"\">\n                <div className=\"search-fields\">\n                    <div className=\"field\">\n                        <label className=\"label\">Search By: </label>\n                        <input\n                            type=\"text\"\n                            className=\"searchfield\"\n                            placeholder=\"Search by\"\n                            onChange={props.handleSearch}\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\">Book Title: </label>\n                        <input\n                            type=\"text\"\n                            className=\"searchfield\"\n                            placeholder=\"Enter book title\"\n                            onChange={props.handleBookTitle}\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\">Author Name: </label>\n                        <input\n                            type=\"text\"\n                            className=\"searchfield\"\n                            placeholder=\"Enter Author name\"\n                            onChange={props.handleAuthorName}\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\">Publisher Name: </label>\n                        <input\n                            type=\"text\"\n                            className=\"searchfield\"\n                            placeholder=\"Enter Publisher name\"\n                            onChange={props.handlePublisherName}\n                        />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"button\">Search</button>\n                <div className=\"properties\">\n                    <Filter\n                        handleLanguageRes={props.handleLanguageRes}\n                        handleFilter={props.handleFilter}\n                        filter={props.filter}\n                        languageRestriction={props.languageRestriction}\n                    />\n                    <div className=\"sortBy\" onClick={props.handleSort}>\n                        <span className=\"label\">Sort By:</span>\n                        <button\n                            value=\"relevance\"\n                            className={ `sortButton left-button ${props.sort === \"relevance\" ? 'active': ''}` }\n                        >\n                            Relevance\n                        </button>\n                        <button\n                            value=\"newest\"\n                            className={ `sortButton right-button ${props.sort === \"newest\" ? 'active': ''}` }\n                        >\n                            Newest\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Searchbar;","const axios = require('axios');\nexport const axiosInstance = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    baseURL: `https://www.googleapis.com/books/v1/volumes`\n});","import { axiosInstance } from './axiosInstance';\n\nfunction getBooks(name, orderValue, filter, languageRestriction, startIndex) {\n    return axiosInstance.get('', {\n        params: {\n            q: name,\n            orderBy: orderValue,\n            filter,\n            langRestrict: languageRestriction,\n            startIndex\n        }\n    })\n    .then((response) => {\n        const res = JSON.parse(response.request.response);\n        return res;\n    })\n    .catch((error) => {\n        return Promise.reject(error);\n    });\n}\n\nfunction getBookById(bookId) {\n    return axiosInstance.get(`/${bookId}`)\n    .then((response) => {\n        const res = JSON.parse(response.request.response);\n        return res;\n    })\n    .catch((error) => {\n        return Promise.reject(error);\n    });\n}\n\nexport {\n    getBooks,\n    getBookById\n};","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst BookCard = (props) => {\n    const publishedYear = !props.book.volumeInfo.hasOwnProperty('publishedDate')\n                          ? props.book.volumeInfo.publishedDate = \"0000\"\n                          : props.book.volumeInfo.publishedDate.substring(0,4);\n    const averageRating = !props.book.volumeInfo.hasOwnProperty('averageRating')\n                          ? props.book.volumeInfo.averageRating = \"1\" : props.book.volumeInfo.averageRating;\n    const thumbnail = !props.book.volumeInfo.hasOwnProperty('imageLinks')\n                      ? 1 : props.book.volumeInfo.imageLinks.thumbnail;\n\n    return(\n        <Link to={`/${props.book.id}`}>\n            <div className=\"bookCard\">\n                <div className=\"bookCard-bookThumbnail\"><img src={thumbnail} alt={props.book.volumeInfo.title} /></div>\n                <div className=\"bookCard-bookInfo\">\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Name: </span>\n                        {props.book.volumeInfo.title}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Authors: </span>\n                        {props.book.volumeInfo.authors}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Publisher: </span>\n                        {props.book.volumeInfo.publisher}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Published Year: </span>\n                        {publishedYear}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Language: </span>\n                        {props.book.volumeInfo.language.toUpperCase()}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Rating: </span>\n                        {averageRating}/5\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default BookCard;","import React, { Component } from 'react';\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumbers: [1],\n            booksPerPage: 10,\n            totalPages: Math.ceil(props.totalBooks / 10),\n            currentPage: this.props.currentPage\n        };\n\n        this.pageNumbers = [];\n\n        if(this.state.currentPage<5) {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            this.state.pageNumbers.splice(1, 0, \"...\");\n            for (let i = 5; i >= 2; i--) {\n                this.state.pageNumbers.splice(1, 0, i);\n            }\n        } else if( this.state.currentPage>(this.state.totalPages-4)) {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            for (let i = this.state.totalPages-1; i >= this.state.totalPages-4; i--) {\n                this.state.pageNumbers.splice(1, 0, i);\n            }\n            this.state.pageNumbers.splice(1, 0, \"...\");\n        } else {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            this.state.pageNumbers.splice(1, 0, \"...\");\n            for (let i = this.state.currentPage+2; i >= this.state.currentPage-2; i--) {\n                this.state.pageNumbers.splice( 1, 0, i);\n            }\n            this.state.pageNumbers.splice(1, 0, \"...\");\n        }\n\n        this.handlePaginationNext = this.handlePaginationNext.bind(this);\n        this.handlePaginationPrev = this.handlePaginationPrev.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n    }\n\n    handlePaginationNext () {\n        if(this.state.currentPage<this.state.totalPages) {\n            this.props.onPageChange(this.state.currentPage+1);\n        }\n    }\n\n    handlePaginationPrev () {\n        if(this.state.currentPage>1) {\n            this.props.onPageChange(this.state.currentPage-1);\n        }\n    }\n\n    handlePageChange (Number) {\n        this.setState({ currentPage: Number });\n        this.props.onPageChange(Number);\n    }\n\n    render() {\n        return(\n            <div className=\"pagination\">\n                <div\n                    className={`pagination-prev ${this.state.currentPage <= 1 ? 'isDisabled': '' }`}\n                    onClick={this.handlePaginationPrev}>\n                         Prev\n                </div>\n                <div className=\"pagination-list\">\n                    {this.state.pageNumbers.map(Number => (\n                        <div\n                            key={Number}\n                            className={ `pagination-element ${this.state.currentPage ===  Number  ? 'active': ''}` }\n                            onClick={ ()=> { this.handlePageChange(Number); } }\n                        >\n                            { Number }\n                        </div>\n                    ))}\n                </div>\n                <div\n                    className={`pagination-next ${this.state.currentPage === this.state.totalPages ? 'isDisabled': ''}`}\n                    onClick={this.handlePaginationNext}>\n                        Next\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pagination;\n","/* eslint-disable react/prop-types */\nimport BookCard from './bookCard';\nimport Pagination from './pagination';\nimport React, { Component } from 'react';\n\nclass BooksList extends Component {\n    render() {\n        return(\n            <div className=\"booklistPage\">\n                <div className=\"bookslist\">\n                    {this.props.books.map((book) => {\n                        return <BookCard key={book} book={book} />;\n                    })}\n                </div>\n                { this.props.books.length ? <Pagination\n                    totalBooks={this.props.totalBooks}\n                    onPageChange={this.props.onPageChange}\n                    currentPage={this.props.currentPage}\n                /> : null}\n            </div>\n        );\n    }\n}\n\nexport default BooksList;","import React from 'react';\n\nconst LoadingSpinner = () => (\n  <div className=\"spinner\">\n    <i className=\"fa fa-spinner fa-pulse\" />\n    <p>Fetching Books...</p>\n  </div>\n);\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\n\nclass Chip extends Component {\n    handleRemove = () => {\n        if(this.props.handleFilter) {\n            this.props.handleFilter();\n        } else if (this.props.handleLanguageRes) {\n            this.props.handleLanguageRes();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"chip\">\n                <div className=\"filterName\">{this.props.filter}</div>\n                <i className=\"fas fa-times-circle\" value=\"none\" onClick={this.handleRemove} />\n            </div>\n        );\n    }\n}\n\nexport default Chip;\n","import React, { Component } from 'react';\nimport Searchbar from './../components/searchbar';\nimport { getBooks } from '../api/booksApi';\nimport BooksList from '../components/booksList';\nimport LoadingSpinner from '../components/loadingSpinner';\nimport Chip from \"../components/chip\";\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            totalBooks: 0,\n            searchField: '',\n            bookTitle: '',\n            authorName: '',\n            publisherName: '',\n            sort: 'relevance',\n            isLoading: false,\n            filter: null,\n            languageRestriction: null,\n            startIndex: 0,\n            currentPage: 1\n        };\n    }\n\n    handleSearch = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    handleBookTitle = (e) => {\n        this.setState({ bookTitle: `+intitle:${ e.target.value }` });\n    }\n\n    handleAuthorName = (e) => {\n        this.setState({ authorName: `+inauthor:${ e.target.value }` });\n    }\n\n    handlePublisherName = (e) => {\n        this.setState({ publisherName: `+inpublisher:${ e.target.value }` });\n    }\n\n    handleSort = (e) => {\n        e.preventDefault();\n        if(e.target.value!==undefined) {\n            this.setState({ sort: e.target.value });\n        }\n        this.handleRequest();\n    }\n\n\n    handleFilter = (e) => {\n        if(e==null) {\n            this.setState({ filter: null });\n        } else if(e.target.value!==\"none\") {\n            this.setState({ filter: e.target.value });\n        } else {\n            this.setState({ filter: null });\n        }\n        this.handleRequest();\n    }\n\n    handleLanguageRes = (e) => {\n        if(e!==undefined) {\n            this.setState({ languageRestriction: e.target.value });\n        } else {\n            this.setState({ languageRestriction: null });\n        }\n        this.handleRequest();\n    }\n\n    handlePage = (currentPage) => {\n        this.setState({ startIndex: (currentPage-1)*10, currentPage });\n        this.handleRequest();\n    }\n\n    handleRequest = () => {\n        this.q = this.state.searchField + this.state.bookTitle + this.state.authorName + this.state.publisherName;\n        if(this.state.searchField!=='') {\n            this.setState({ isLoading:true }, () => {\n                getBooks(this.q,\n                    this.state.sort,\n                    this.state.filter,\n                    this.state.languageRestriction,\n                    this.state.startIndex\n                )\n                .then((data) => {\n                    this.setState({ isLoading:false, books: [...data.items], totalBooks: data.totalItems });\n                })\n                .catch( err => {\n                    this.setState({ isLoading:false, currentPage: 1 });\n                    alert(err);\n                });\n            });\n        } else {\n            alert(\"Please input Search Query\");\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"landing\">\n                <Searchbar\n                    searchBook={this.searchBook}\n                    handleSearch={this.handleSearch}\n                    handleBookTitle={this.handleBookTitle}\n                    handleAuthorName={this.handleAuthorName}\n                    handlePublisherName={this.handlePublisherName}\n                    handleSort={this.handleSort}\n                    sort={this.state.sort}\n                    filter={this.state.filter}\n                    languageRestriction={this.state.languageRestriction}\n                    handleFilter={this.handleFilter}\n                    handleLanguageRes={this.handleLanguageRes}\n                />\n                <div className=\"chipComponents\">\n                    { this.state.filter ? <Chip filter={this.state.filter} handleFilter={this.handleFilter} /> : null }\n                    { this.state.languageRestriction ? <Chip\n                        filter={this.state.languageRestriction}\n                        handleLanguageRes={this.handleLanguageRes}\n                    /> : null }\n                </div>\n                {this.state.isLoading ? <LoadingSpinner /> : <BooksList\n                    books={this.state.books}\n                    totalBooks={this.state.totalBooks}\n                    onPageChange={this.handlePage}\n                    currentPage={this.state.currentPage}\n                /> }\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst SuggestedBookCard = (props) => {\n    const thumbnail = !props.book.volumeInfo.hasOwnProperty('imageLinks')\n                      ? 1 : props.book.volumeInfo.imageLinks.thumbnail;\n\n    return(\n        <Link to={`/${props.book.id}`}>\n            <div className=\"suggestedbookCard\">\n                <div className=\"suggestedBookCard-bookThumbnail\"><img src={thumbnail} alt={props.book.volumeInfo.title} /></div>\n                <div className=\"suggestedBookCard-bookInfo\">\n                    <div className=\"suggestedBookCard-bookInformation\">\n                        <span className=\"cardLabel\">Name: </span>\n                        {props.book.volumeInfo.title}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default SuggestedBookCard;","import React, { Component } from 'react';\nimport { getBookById, getBooks } from '../api/booksApi';\nimport SuggestedBookCard from '../components/suggestionBookCard';\nimport LoadingSpinner from '../components/loadingSpinner';\n\nclass BookInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            BookId: this.props.match.params.id,\n            isLoading: false,\n            Book: {\n                title: '',\n                authors: [],\n                publisher: '',\n                publishedDate: '',\n                description: '',\n                thumbnail: '',\n                pagecount: '',\n                saleInfo: '',\n                category: [],\n                link: '',\n                ebook: ''\n            },\n            suggestions: []\n        };\n    }\n\n    componentDidMount() {\n        this.handleGetData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.handleGetData();\n        }\n    }\n\n    handleGetData = () => {\n        this.setState({ isLoading: true }, () => {\n            getBookById(this.props.match.params.id)\n            .then((data) => {\n                this.setState({\n                    isLoading:false,\n                    Book: {\n                        title: data.volumeInfo.title,\n                        authors: data.volumeInfo.authors,\n                        publisher: data.volumeInfo.publisher,\n                        publishedDate: data.volumeInfo.publishedDate,\n                        description: data.volumeInfo.description,\n                        thumbnail: data.volumeInfo.imageLinks.thumbnail,\n                        pagecount: data.volumeInfo.pageCount,\n                        saleInfo: data.saleInfo.saleability,\n                        category: data.volumeInfo.categories,\n                        link: data.accessInfo.webReaderLink,\n                        ebook: data.saleInfo.saleability.isEbook\n                    }\n                });\n                this.query = `${data.volumeInfo.title}+subject=${data.volumeInfo.categories}`;\n                getBooks(this.query)\n                .then((data) => {\n                    this.setState({ suggestions: [...data.items] });\n                })\n                .catch( err => {\n                    alert(\"Error while getting suggestions\");\n                });\n            })\n            .catch( err => {\n                this.setState({ isLoading:false });\n                alert(err);\n            });\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"bookInfo\">\n                {this.state.isLoading ? <LoadingSpinner /> : <div>\n                    <div className=\"title\">{this.state.Book.title}</div>\n                    <div className=\"bookProperties\">\n                        <div className=\"image\">\n                            <div className=\"thumbnail\">\n                                <img src={this.state.Book.thumbnail} alt={this.state.Book.title} />\n                            </div>\n                            <a className=\"button\" href={this.state.Book.link}>Go to Book</a>\n                        </div>\n                        <div className=\"smallInfo\">\n                            <div className=\"author\">\n                                <span className=\"label\">Authors:</span>\n                                {this.state.Book.authors}\n                            </div>\n                            <div className=\"publisher\">\n                                <span className=\"label\">Publisher:</span>\n                                {this.state.Book.publisher}\n                            </div>\n                            <div className=\"published date\">\n                                <span className=\"label\">Published Date:</span>\n                                {this.state.Book.publishedDate}\n                            </div>\n                            <div className=\"saleinfo\">\n                                <span className=\"label\">Sale Info:</span>\n                                {this.state.Book.saleInfo}\n                            </div>\n                            <div className=\"ebook\">\n                                <span className=\"label\">E-book:</span>\n                                {!this.state.Book.ebook ? 'Not available': 'Available' }\n                            </div>\n                            <div className=\"pagecount\">\n                                <span className=\"label\">Page Count:</span>\n                                {this.state.Book.pagecount}\n                            </div>\n                        </div>\n                    </div>\n                    <label className=\"descLabel\">About the Book</label>\n                    <div className=\"description\">{this.state.Book.description}</div>\n                    <div className=\"suggestions\">\n                        <label className=\"descLabel\">Suggested Books</label>\n                        <div className=\"suggestedBooks\">\n                            {this.state.suggestions.map((bookID) => {\n                                return <SuggestedBookCard key={bookID} book={bookID} />;\n                            })}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default BookInfo;\n","import React from 'react';\nimport { HashRouter as Router , Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header';\nimport './styles/main.scss';\nimport LandingPage from './pages/landing';\nimport BookInfo from './pages/bookInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/:id\" component={BookInfo} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}